@model PMS.Models.OcorrenciaSec

@{
    ViewBag.Title = "Create";
}

@section scripts{
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDt0pnAgxUq7nEb8SwAzSEgNw_t2zKuLwI&callback=initMap"></script>

    @Scripts.Render("~/bundles/ocorrencia")

}

<button class="btn btn-default" onclick="getLocation()">Buscar Localização Atual</button>
<button onclick="geocodeAddress()" class="btn btn-default" type="button">Localizar</button>
<input type="text" class="form-control" id="txtEndereco">

<hr />


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<hr />

<div class="card card-default" id="cardDemo14">
    <div class="card-header">Basic Tabs</div>
    <div class="card-body">
        <div role="tabpanel">

            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" href="#home" aria-controls="home" role="tab" data-toggle="tab">Mapa</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Formulário</a>
                </li>
                @*<li class="nav-item" role="presentation">
                    <a class="nav-link" href="#messages" aria-controls="messages" role="tab" data-toggle="tab">Foto </a>
                </li>*@
            </ul>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="tab-content">
                    <div class="tab-pane active" id="home" role="tabpanel">
                        <div id="map" style="width: 100%; height: 500px;"></div>
                    </div>

                    <div class="tab-pane" id="profile" role="tabpanel">
                        <div class="form-horizontal">
                            <h4>OcorrenciaSec</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoOcorrenciaSecId, "TipoOcorrenciaSecId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TipoOcorrenciaSecId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TipoOcorrenciaSecId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DescricaoOcorrenciaSecId, "DescricaoOcorrenciaSecId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("DescricaoOcorrenciaSecId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DescricaoOcorrenciaSecId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SecretariaId, "SecretariaId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("SecretariaId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SecretariaId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<div class="tab-pane" id="messages" role="tabpanel">
                        <div class="form-group">
                            <div class="col-md-10">
                                <img class="imagem-upload" src="\img\search.jpg" width="200" height="200" />
                                <a href="#" class="btn btn-dark bt-inserir-foto">Alterar imagem</a>
                                <input name="foto" id="foto" value="" type="hidden" />
                            </div>
                        </div>
                    </div>*@
                </div>
            }
        </div>
    </div>
</div>
@*<form id="upload-imagem" method="POST" class="hide" hidden action="@Url.Action("UploadFoto", "OcorrenciaPB" )">
    <input type="file" name="file" id="FotoFile" />
    @Html.AntiForgeryToken()
</form>*@